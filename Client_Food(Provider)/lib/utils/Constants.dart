import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:flutter_svg/svg.dart';
import 'package:intl/intl.dart';

class Constants {
  Color textColor = Color(0xff3D525C);
  Color defaultColor = Color(0xffFEBC18);

  static const MaterialColor themeColor = MaterialColor(
    0xFFFEBC18,
    <int, Color>{
      50: Color(0x0D5FEBC18),
      100: Color(0x1AFEBC18),
      200: Color(0x33FEBC18),
      300: Color(0x4DFEBC18),
      400: Color(0x66FEBC18),
      500: Color(0x80FEBC18),
      600: Color(0x99FEBC18),
      700: Color(0xB3FEBC18),
      800: Color(0xCCFEBC18),
      900: Color(0xE6FEBC18),
    },
  );

  void printColorRed(String text) {
    print('\x1B[31m$text\x1B[0m');
  }

  void printColorGreen(String text) {
    print('\x1B[32m$text\x1B[0m');
  }

  void printColorYellow(String text) {
    print('\x1B[33m$text\x1B[0m');
  }

  void printColorBlue(String text) {
    print('\x1B[34m$text\x1B[0m');
  }

  void printColorMagenta(String text) {
    print('\x1B[35m$text\x1B[0m');
  }

  void printColorCyan(String text) {
    print('\x1B[36m$text\x1B[0m');
  }

  bool isEmail(String? string) {
    // Null or empty string is invalid
    if (string == null || string.isEmpty) {
      return false;
    }

    const pattern =
        r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$';
    final regExp = RegExp(pattern);

    if (!regExp.hasMatch(string)) {
      return false;
    }
    return true;
  }

  static const EdgeInsets paddingAppLR = EdgeInsets.only(left: 20, right: 20);
  static const EdgeInsets paddingAppLRT =
      EdgeInsets.only(left: 20, right: 20, top: 10);
  static const EdgeInsets paddingAppLRB =
      EdgeInsets.only(left: 20, right: 20, bottom: 10);
  static const EdgeInsets paddingAppLRTB =
      EdgeInsets.only(left: 20, right: 20, top: 10, bottom: 10);

  Widget showLogo() => Image.asset('assets/images/ic_launcher.png');

  Widget contactMainPageSVG() => Container(child: SvgPicture.string('''
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30">
  <g id="Group_11778" data-name="Group 11778" transform="translate(13036 19530)">
    <circle id="Ellipse_59" data-name="Ellipse 59" cx="15" cy="15" r="15" transform="translate(-13036 -19530)" fill="#fff"/>
    <path id="Path_25110" data-name="Path 25110" d="M1647.269,2241.7a3.8,3.8,0,1,1,3.8,3.8A3.8,3.8,0,0,1,1647.269,2241.7Zm1.24,5.8a4.441,4.441,0,0,0-4.441,4.441,3.16,3.16,0,0,0,3.161,3.161h7.682a3.16,3.16,0,0,0,3.161-3.161,4.441,4.441,0,0,0-4.441-4.441Z" transform="translate(-14672.07 -21761.496)" fill="#3d525c" fill-rule="evenodd"/>
  </g>
</svg>

'''));

  Widget discountSvgIcon() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" width="20.303" height="18.414" viewBox="0 0 20.303 18.414">
   <path id="Path_25394" data-name="Path 25394" d="M614.631,2259.143V2255.6h-3.069a3.541,3.541,0,0,0-3.541,3.541v2.59a.951.951,0,0,0,.951.951,1.881,1.881,0,0,1,1.882,1.882v.485a1.882,1.882,0,0,1-1.882,1.882.951.951,0,0,0-.951.951v2.59a3.541,3.541,0,0,0,3.541,3.541h3.069v-3.541a.708.708,0,1,1,1.416,0v3.541h8.735a3.541,3.541,0,0,0,3.541-3.541v-2.59a.951.951,0,0,0-.951-.951,1.882,1.882,0,0,1-1.882-1.882v-.485a1.881,1.881,0,0,1,1.882-1.882.951.951,0,0,0,.951-.951v-2.59a3.541,3.541,0,0,0-3.541-3.541h-8.735v3.541a.708.708,0,0,1-1.416,0Zm1.416,3.777a.708.708,0,0,0-1.416,0v3.777a.708.708,0,1,0,1.416,0Z" transform="translate(-608.021 -2255.602)" fill="#febc18" fill-rule="evenodd"/>
  </svg>
  '''));

  Widget pointSvgIcon() => Container(
        child: SvgPicture.string(
            '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="29.968" height="29.968" viewBox="0 0 29.968 29.968">
  <defs>
    <clipPath id="clip-path">
      <rect id="Rectangle_1189" data-name="Rectangle 1189" width="29.968" height="29.968" transform="translate(0 0)" fill="#febc18"/>
    </clipPath>
  </defs>
  <g id="Group_11728" data-name="Group 11728" transform="translate(0 0)">
    <g id="Group_11727" data-name="Group 11727" clip-path="url(#clip-path)">
      <path id="Path_25392" data-name="Path 25392" d="M15.448,11.914H14.054v2.738h1.394c.99,0,1.484-.455,1.484-1.36s-.494-1.378-1.484-1.378" fill="#febc18" fill-rule="evenodd"/>
      <path id="Path_25393" data-name="Path 25393" d="M17.821,0H12.147A12.148,12.148,0,0,0,0,12.147v5.675A12.148,12.148,0,0,0,12.147,29.969h5.674A12.148,12.148,0,0,0,29.969,17.822V12.147A12.148,12.148,0,0,0,17.821,0m2.161,15.375a3.812,3.812,0,0,1-1.592,1.5,5.507,5.507,0,0,1-2.6.563H14.054V21.7H12.685a2.137,2.137,0,0,1-2.137-2.137V9.089h5.241a5.678,5.678,0,0,1,2.583.537,3.685,3.685,0,0,1,1.6,1.485,4.343,4.343,0,0,1,.537,2.181,4.175,4.175,0,0,1-.528,2.083" fill="#febc18" fill-rule="evenodd"/>
    </g>
  </g>
</svg>
'''),
        height: 40,
        width: 40,
      );

  Widget paypalSvgIcon() => Container(
      child: SvgPicture.string(
          '<svg xmlns="http://www.w3.org/2000/svg" width="17.758" height="18" viewBox="0 0 17.758 18"><path id="paypal" d="M5.3,18H2.973a.691.691,0,0,1-.7-.885l.112-.506H3.936a1.2,1.2,0,0,0,1.111-.886l.8-3.444a1.2,1.2,0,0,1,1.11-.885h.662a10.948,10.948,0,0,0,6.63-1.755,5.461,5.461,0,0,0,2.37-4.6,4.4,4.4,0,0,0-.441-2.092c0-.012-.012-.023-.012-.034l.1.056a3.472,3.472,0,0,1,1.284,1.36A4.372,4.372,0,0,1,18,6.42a5.447,5.447,0,0,1-2.373,4.6A11.023,11.023,0,0,1,9,12.765H8.325a1.2,1.2,0,0,0-1.113.889l-.8,3.455a1.188,1.188,0,0,1-1.1.878ZM3.293,15.979H.965a.692.692,0,0,1-.7-.885L3.543.887A1.2,1.2,0,0,1,4.653,0H9.5a15.3,15.3,0,0,1,2.736.216,5.742,5.742,0,0,1,2.013.742,3.461,3.461,0,0,1,1.273,1.364,4.512,4.512,0,0,1,.438,2.1A5.414,5.414,0,0,1,13.589,9.01a10.944,10.944,0,0,1-6.627,1.745H6.3s-1,.393-1.109.877l-.8,3.442a1.2,1.2,0,0,1-1.114.879ZM8.878,2.953h-.76a1.194,1.194,0,0,0-1.11.884l-.7,3.015a.689.689,0,0,0,.7.884h.574a4.9,4.9,0,0,0,2.925-.766,2.554,2.554,0,0,0,1.047-2.184,1.539,1.539,0,0,0-.675-1.38,3.638,3.638,0,0,0-2.015-.454h.014Z" transform="translate(-0.241)" fill="#3d525c"/></svg>'));

  Widget promptpaySvgIcon() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22">
  <g id="prompay" transform="translate(19968 -9873)">
    <g id="Group_4799" data-name="Group 4799" transform="translate(-19969.289 9874.946)">
      <g id="Group_4800" data-name="Group 4800" transform="translate(1.289 2.054)">
        <path id="Path_3964" data-name="Path 3964" d="M96.711,142.7q-5.421,0-10.841,0c-.137,0-.163-.037-.162-.167q.007-2.9,0-5.807c0-.111.012-.158.146-.158q10.834.006,21.669,0c.182,0,.182,0,.182.184q0,2.89,0,5.78c0,.137-.039.164-.169.164q-5.414-.006-10.827,0m.143-3.746c0-.075,0-.125,0-.175,0-.254,0-.254-.251-.253-.3,0-.3,0-.3.3,0,.917,0,1.834,0,2.751,0,.088.021.123.114.117a2.308,2.308,0,0,1,.345,0c.092.007.105-.032.1-.11q0-.608,0-1.216a4.766,4.766,0,0,1,.026-.716.831.831,0,0,1,.98-.7.443.443,0,0,1,.376.388,2.614,2.614,0,0,1,.028.413c0,.608,0,1.216,0,1.825,0,.1.028.128.124.121a2.783,2.783,0,0,1,.345,0c.086,0,.11-.027.108-.111-.005-.235,0-.47,0-.7,0-.405-.012-.812.01-1.216a.781.781,0,0,1,1.122-.652c.232.1.255.321.257.538,0,.562,0,1.124,0,1.686,0,.147-.051.342.023.427s.286.014.435.032c.11.013.126-.034.125-.131,0-.636,0-1.272,0-1.908a3,3,0,0,0-.026-.413.829.829,0,0,0-.647-.738,1.266,1.266,0,0,0-1.386.432c-.555-.664-1.175-.662-1.9.022m-10.033.98h0c0,.544,0,1.088,0,1.631,0,.093.017.132.119.125a2.715,2.715,0,0,1,.387,0c.109.008.128-.036.127-.134,0-.479,0-.958,0-1.438,0-.264,0-.259.266-.265.5-.01,1,.034,1.491-.025a1.268,1.268,0,0,0,.838-1.958,1.3,1.3,0,0,0-1.156-.525c-.571,0-1.143,0-1.714,0-.114,0-.262-.051-.332.023s-.009.22-.024.333c-.018.133.04.156.16.155.636,0,1.272,0,1.908.007a.685.685,0,0,1,.653.361.736.736,0,0,1-.493,1.088,1.265,1.265,0,0,1-.313.042c-.387,0-.774,0-1.161,0-.1,0-.126-.023-.124-.121.006-.313,0-.627,0-.94,0-.076-.019-.106-.1-.1a3.771,3.771,0,0,1-.415,0c-.1-.007-.12.03-.119.123,0,.539,0,1.078,0,1.617m15.345,1.447a1.256,1.256,0,0,0,1.057.411,1.27,1.27,0,0,0,1.142-.74,2.328,2.328,0,0,0,.155-1.509,1.338,1.338,0,0,0-2.286-.683c-.019.02-.034.061-.074.039-.025-.118.05-.272-.035-.344s-.23-.014-.349-.02c-.023,0-.046,0-.069,0-.086-.013-.109.024-.108.108q0,1.783,0,3.566c0,.08.015.118.106.112a2.6,2.6,0,0,1,.345,0c.089.006.119-.02.117-.114-.006-.275,0-.549,0-.824m-8.148.41c.069,0,.139,0,.207,0a1.327,1.327,0,0,0,1.118-.676,2.206,2.206,0,0,0,.251-1.278,1.346,1.346,0,0,0-.9-1.285,1.556,1.556,0,0,0-1.679.263,1.76,1.76,0,0,0-.511,1.542,1.4,1.4,0,0,0,1.514,1.435m11.31-1.636a10.53,10.53,0,0,0,.026,1.11.486.486,0,0,0,.429.454,1.6,1.6,0,0,0,.59-.01c.043-.008.068-.024.067-.07a1.394,1.394,0,0,0-.02-.353c-.008-.027-.169-.009-.26-.012-.018,0-.037,0-.055-.006a.2.2,0,0,1-.2-.209c0-.673,0-1.345,0-2.018,0-.06.019-.08.079-.079.124,0,.249,0,.373,0,.058,0,.079-.016.085-.077.035-.36.036-.36-.322-.36a.711.711,0,0,0-.11,0c-.091.014-.106-.029-.1-.109,0-.226,0-.452,0-.677,0-.076-.017-.106-.1-.1a3.813,3.813,0,0,1-.387,0c-.081,0-.1.027-.1.1,0,.23,0,.461,0,.691,0,.071-.019.1-.093.094-.092-.006-.184,0-.276,0-.061,0-.075.021-.079.08-.022.353-.024.353.329.357h.014c.088-.016.107.024.106.107,0,.336,0,.673,0,1.086m-14.19-1.122c0-.163,0-.295,0-.427,0-.058-.015-.083-.076-.081-.124,0-.249,0-.373,0-.064,0-.087.017-.087.085q0,1.493,0,2.985c0,.071.021.1.095.094a2.4,2.4,0,0,1,.345,0c.111.011.126-.034.126-.132,0-.557,0-1.115,0-1.672a.828.828,0,0,1,.851-.87c.218-.005.218-.005.218-.235,0-.35-.059-.4-.4-.3-.009,0-.017.007-.026.01a1.4,1.4,0,0,0-.668.545" transform="translate(-85.707 -136.576)" fill="#043e69"/>
        <path id="Path_3965" data-name="Path 3965" d="M898.779,139.58c0-.94,0-1.881,0-2.821,0-.111.027-.14.139-.139.825.005,1.65,0,2.474,0a2.566,2.566,0,0,1,.98.172,1.5,1.5,0,0,1,.954,1.134,2.911,2.911,0,0,1-.031,1.324,1.4,1.4,0,0,1-.992,1.024,2.7,2.7,0,0,1-.853.136c-.419,0-.838,0-1.257,0-.113,0-.141.035-.14.144,0,.619,0,1.239,0,1.858,0,.1-.02.138-.131.136-.343-.007-.686-.005-1.03,0-.095,0-.117-.03-.117-.121,0-.949,0-1.9,0-2.848m1.273-1.064h0c0,.254,0,.508,0,.762,0,.08.012.118.107.116.37-.006.74,0,1.11,0a.948.948,0,0,0,.518-.15.8.8,0,0,0,.321-.683.737.737,0,0,0-.714-.879c-.421-.048-.846-.008-1.269-.02-.088,0-.072.059-.072.11,0,.25,0,.5,0,.749" transform="translate(-898.692 -129.457)" fill="#043e69"/>
        <path id="Path_3966" data-name="Path 3966" d="M1086.52,166.105a2.366,2.366,0,0,1-.361.305,1.765,1.765,0,0,1-1.859.135,1.059,1.059,0,0,1-.6-.863,1.331,1.331,0,0,1,.426-1.283,1.755,1.755,0,0,1,.854-.352c.36-.062.722-.107,1.083-.161a.769.769,0,0,0,.227-.075.324.324,0,0,0,.205-.3.353.353,0,0,0-.2-.363,1.3,1.3,0,0,0-1-.016.51.51,0,0,0-.294.4c-.019.095-.061.114-.151.113-.307-.006-.615,0-.923,0-.083,0-.1-.016-.091-.1a1.45,1.45,0,0,1,1.332-1.374,3.316,3.316,0,0,1,1.711.138,1.062,1.062,0,0,1,.793,1.093c.013.793,0,1.587.007,2.38a2.929,2.929,0,0,0,.018.333.334.334,0,0,0,.173.282c.079.041.055.106.05.163s-.067.042-.106.043c-.356,0-.713,0-1.07,0-.081,0-.124-.024-.141-.1a2.083,2.083,0,0,1-.081-.4m-.027-1.322c0-.083,0-.15,0-.216s-.02-.077-.076-.045a1.917,1.917,0,0,1-.6.169,2.43,2.43,0,0,0-.643.166.542.542,0,0,0-.3.572.481.481,0,0,0,.4.453.849.849,0,0,0,.319.01.9.9,0,0,0,.868-.7,1.6,1.6,0,0,0,.033-.409" transform="translate(-1078.651 -154.272)" fill="#043e69"/>
        <path id="Path_3967" data-name="Path 3967" d="M1248.733,163.894q.127-.46.255-.919c.052-.189.105-.377.152-.567a.1.1,0,0,1,.119-.091c.344,0,.687,0,1.03,0,.1,0,.109.03.085.117q-.456,1.657-.908,3.316c-.154.561-.308,1.123-.456,1.685-.022.083-.051.116-.14.114q-.508-.008-1.017,0c-.1,0-.109-.032-.085-.118.109-.389.211-.781.32-1.17a.34.34,0,0,0,0-.207q-.561-1.786-1.119-3.574c-.05-.161-.051-.161.123-.161.33,0,.66,0,.99,0,.1,0,.145.019.176.123.145.485.3.967.452,1.451l.027,0" transform="translate(-1237.534 -154.468)" fill="#043e69"/>
        <path id="Path_3977" data-name="Path 3977" d="M469.151,204.539c.729-.684,1.35-.686,1.9-.022a1.266,1.266,0,0,1,1.386-.432.829.829,0,0,1,.647.738,2.994,2.994,0,0,1,.026.413c0,.636,0,1.272,0,1.907,0,.1-.015.145-.125.132-.149-.018-.35.065-.435-.032s-.023-.28-.023-.427c0-.562,0-1.124,0-1.686,0-.217-.025-.434-.256-.538a.781.781,0,0,0-1.122.651c-.022.4-.008.811-.01,1.216,0,.235,0,.47,0,.7,0,.084-.022.116-.108.111a2.786,2.786,0,0,0-.345,0c-.1.007-.125-.023-.124-.121,0-.608,0-1.216,0-1.825a2.607,2.607,0,0,0-.028-.413.443.443,0,0,0-.376-.388.831.831,0,0,0-.98.7,4.781,4.781,0,0,0-.027.716q0,.608,0,1.216c0,.078-.013.117-.1.11a2.316,2.316,0,0,0-.345,0c-.093.006-.114-.029-.114-.117,0-.917,0-1.834,0-2.751,0-.3,0-.3.3-.3.251,0,.251,0,.251.253,0,.05,0,.1,0,.175" transform="translate(-458.005 -202.157)" fill="#fdfdfd"/>
        <path id="Path_3978" data-name="Path 3978" d="M125.515,166.6c0-.539,0-1.078,0-1.617,0-.094.019-.13.119-.123a3.775,3.775,0,0,0,.414,0c.08,0,.1.026.1.1,0,.313,0,.627,0,.94,0,.1.029.123.124.121.387-.005.774,0,1.161,0a1.269,1.269,0,0,0,.313-.042.736.736,0,0,0,.493-1.088.685.685,0,0,0-.653-.36c-.636-.012-1.272-.011-1.908-.007-.121,0-.178-.022-.16-.155.015-.113-.046-.261.024-.333s.219-.022.332-.023c.571,0,1.143-.006,1.714,0a1.305,1.305,0,0,1,1.156.525,1.268,1.268,0,0,1-.838,1.958c-.5.059-.994.015-1.491.025-.266.006-.266,0-.266.265,0,.479,0,.959,0,1.438,0,.1-.019.142-.127.134a2.7,2.7,0,0,0-.387,0c-.1.007-.12-.032-.119-.125,0-.544,0-1.088,0-1.631Z" transform="translate(-124.402 -163.237)" fill="#fdfdfd"/>
        <path id="Path_3979" data-name="Path 3979" d="M660.707,207.015c0,.275,0,.55,0,.824,0,.094-.028.12-.117.114a2.591,2.591,0,0,0-.345,0c-.091.006-.106-.032-.106-.112q0-1.783,0-3.566c0-.084.022-.121.108-.108.022,0,.046,0,.069,0,.119.006.268-.048.349.02s.01.226.035.344c.04.022.054-.019.073-.039a1.339,1.339,0,0,1,2.286.683,2.327,2.327,0,0,1-.154,1.509,1.27,1.27,0,0,1-1.143.74,1.256,1.256,0,0,1-1.056-.411m-.02-1.195a1.737,1.737,0,0,0,.03.385.882.882,0,0,0,1.709.165,1.8,1.8,0,0,0-.015-1.293.867.867,0,0,0-1.593-.011,1.929,1.929,0,0,0-.132.755" transform="translate(-644.249 -202.205)" fill="#fdfdfd"/>
        <path id="Path_3980" data-name="Path 3980" d="M332.534,206.76a1.4,1.4,0,0,1-1.514-1.435,1.76,1.76,0,0,1,.511-1.542,1.556,1.556,0,0,1,1.679-.263,1.347,1.347,0,0,1,.9,1.285,2.2,2.2,0,0,1-.251,1.278,1.327,1.327,0,0,1-1.118.676c-.069.006-.138,0-.207,0m.992-1.761a1.422,1.422,0,0,0-.062-.5.927.927,0,0,0-1.693-.159,1.749,1.749,0,0,0-.143,1.156.9.9,0,0,0,.908.818.8.8,0,0,0,.851-.544,1.8,1.8,0,0,0,.14-.773" transform="translate(-324.223 -201.541)" fill="#fdfdfd"/>
        <path id="Path_3981" data-name="Path 3981" d="M778.969,177.662c0-.413,0-.75,0-1.086,0-.082-.018-.123-.106-.107h-.014c-.353,0-.351,0-.329-.357,0-.059.018-.082.079-.08.092,0,.184,0,.276,0,.074,0,.094-.023.093-.094,0-.23,0-.461,0-.691,0-.075.016-.106.1-.1a3.8,3.8,0,0,0,.387,0c.081,0,.1.025.1.1,0,.226,0,.452,0,.677,0,.08.013.124.1.109a.718.718,0,0,1,.11,0c.359,0,.357,0,.322.36-.006.06-.027.078-.085.077-.124,0-.249,0-.373,0-.06,0-.079.019-.079.079,0,.673,0,1.345,0,2.018a.2.2,0,0,0,.2.209c.018,0,.037.006.055.006.091,0,.252-.015.26.012a1.389,1.389,0,0,1,.02.353c0,.046-.024.063-.067.07a1.6,1.6,0,0,1-.59.01.486.486,0,0,1-.429-.454,10.554,10.554,0,0,1-.026-1.11" transform="translate(-759.349 -174.08)" fill="#fdfdfd"/>
        <path id="Path_3982" data-name="Path 3982" d="M263.182,204.588a1.4,1.4,0,0,1,.668-.545c.009,0,.017-.008.026-.01.346-.091.4-.046.4.3,0,.23,0,.23-.218.235a.828.828,0,0,0-.851.87c0,.557,0,1.115,0,1.672,0,.1-.015.143-.126.132a2.4,2.4,0,0,0-.345,0c-.074,0-.095-.023-.094-.095q0-1.492,0-2.985c0-.068.023-.087.087-.085.124,0,.249,0,.373,0,.062,0,.078.023.076.081,0,.132,0,.264,0,.426" transform="translate(-257.752 -202.128)" fill="#fdfdfd"/>
        <path id="Path_3995" data-name="Path 3995" d="M679.852,222.509a1.939,1.939,0,0,1,.132-.755.867.867,0,0,1,1.593.01,1.8,1.8,0,0,1,.015,1.293.882.882,0,0,1-1.709-.165,1.73,1.73,0,0,1-.031-.385" transform="translate(-663.414 -218.894)" fill="#043e69"/>
        <path id="Path_3996" data-name="Path 3996" d="M353.839,221.579a1.8,1.8,0,0,1-.14.773.8.8,0,0,1-.851.544.9.9,0,0,1-.908-.818,1.748,1.748,0,0,1,.143-1.156.927.927,0,0,1,1.693.159,1.426,1.426,0,0,1,.062.5" transform="translate(-344.536 -218.121)" fill="#043e69"/>
      </g>
    </g>
    <rect id="Rectangle_1382" data-name="Rectangle 1382" width="22" height="22" transform="translate(-19968 9873)" fill="none"/>
  </g>
</svg>
'''));
  Widget mobileBankingSvgIcon() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22">
  <g id="mobile_banking" data-name="mobile banking" transform="translate(19986 -9845)">
    <rect id="Rectangle_1380" data-name="Rectangle 1380" width="22" height="22" transform="translate(-19986 9845)" fill="none"/>
    <path id="mobile" d="M7.975,19.8A1.379,1.379,0,0,0,6.6,18.425a1.375,1.375,0,1,0,.971,2.346A1.324,1.324,0,0,0,7.975,19.8Zm3.575-2.75V4.95A.557.557,0,0,0,11,4.4H2.2a.557.557,0,0,0-.55.55v12.1a.557.557,0,0,0,.55.55H11a.557.557,0,0,0,.55-.55ZM8.25,2.475A.243.243,0,0,0,7.975,2.2H5.225a.243.243,0,0,0-.275.275.243.243,0,0,0,.275.275h2.75A.243.243,0,0,0,8.25,2.475ZM13.2,2.2V19.8A2.231,2.231,0,0,1,11,22H2.2a2.113,2.113,0,0,1-1.547-.653A2.117,2.117,0,0,1,0,19.8V2.2A2.113,2.113,0,0,1,.653.653,2.117,2.117,0,0,1,2.2,0H11a2.113,2.113,0,0,1,1.547.653A2.117,2.117,0,0,1,13.2,2.2Z" transform="translate(-19982 9845)" fill="#3d525c"/>
    <path id="Path_3960" data-name="Path 3960" d="M6.345-5.271a2.464,2.464,0,0,1-.726,1.816A2.945,2.945,0,0,1,3.5-2.666v.411q0,.537-.505.537a.468.468,0,0,1-.521-.537v-.411H1.324a.523.523,0,0,1-.584-.6v-7.69a.523.523,0,0,1,.584-.6H2.477V-11.9A.468.468,0,0,1,3-12.44q.505,0,.505.537v.363A2.307,2.307,0,0,1,5.1-10.8a1.97,1.97,0,0,1,.553,1.374,2.244,2.244,0,0,1-.339,1.239,1.619,1.619,0,0,1-.892.7v.016a2.036,2.036,0,0,1,1.374.7A2.174,2.174,0,0,1,6.345-5.271ZM4.561-9.235A1.213,1.213,0,0,0,3.5-10.577v2.732A1.279,1.279,0,0,0,4.561-9.235ZM2.477-7.8v-2.811H1.829V-7.8ZM5.24-5.271a1.556,1.556,0,0,0-.466-1.145A1.77,1.77,0,0,0,3.5-6.9v3.268a1.894,1.894,0,0,0,1.247-.482A1.5,1.5,0,0,0,5.24-5.271ZM2.477-3.614V-6.9H1.829v3.284Z" transform="translate(-19978.74 9863.44)" fill="#3d525c"/>
  </g>
</svg>
'''));

  Widget trueMoneyWalletSvgIcon() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="22" height="22" viewBox="0 0 22 22">
  <defs>
    <clipPath id="clip-path">
      <path id="Path_3941" data-name="Path 3941" d="M583,304h2.16v3.743H583Zm0,0" transform="translate(-583 -304)"/>
    </clipPath>
  </defs>
  <g id="TrueMoney_wallet" data-name="TrueMoney wallet" transform="translate(19950 -9845)">
    <rect id="Rectangle_1379" data-name="Rectangle 1379" width="22" height="22" transform="translate(-19950 9845)" fill="none"/>
    <g id="surface1" transform="translate(-19950 9847.996)">
      <path id="Path_3939" data-name="Path 3939" d="M524.289,304.054s.074-.536.548-.536.542.536.542.536Zm1.626.071a1.162,1.162,0,0,0-1.13-1.157s-.982,0-1.06,1.33a.751.751,0,0,0,0,.079,1.876,1.876,0,0,0,.02.206,1.831,1.831,0,0,0,.065.281,1.443,1.443,0,0,0,.135.3,1.114,1.114,0,0,0,.232.276,1.057,1.057,0,0,0,.353.2,1.161,1.161,0,0,0,.25.055,1.023,1.023,0,0,0,.345-.032,1.157,1.157,0,0,0,.488-.255.9.9,0,0,0,.158-.174.34.34,0,0,0,.04-.275.243.243,0,0,0-.195-.175c-.112-.01-.175.076-.245.148a.674.674,0,0,1-.51.215.529.529,0,0,1-.468-.258.808.808,0,0,1-.114-.368h1.254c.038,0,.075,0,.113,0a.351.351,0,0,0,.112-.008.229.229,0,0,0,.119-.089.455.455,0,0,0,.035-.3" transform="translate(-505.903 -292.655)" fill="#f3801f"/>
      <g id="Group_4793" data-name="Group 4793" transform="translate(19.84 10.349)" clip-path="url(#clip-path)">
        <path id="Path_3940" data-name="Path 3940" d="M583.526,305.334c.008.024.017.049.026.073a.392.392,0,0,0,.037.1l.039.107.078.214q.076.209.154.417.088.235.178.468l.093.238.046.117.023.058c0,.01.026.05.023.059a2.187,2.187,0,0,1-.159.335,1.4,1.4,0,0,1-.31.345c-.026.021-.112.088-.141.106a.677.677,0,0,0-.171.118.291.291,0,0,0-.073.193.307.307,0,0,0,.046.167.29.29,0,0,0,.105.1.2.2,0,0,0,.149,0,.588.588,0,0,0,.126-.063,2.178,2.178,0,0,0,.476-.393l.039-.047c.015-.018.029-.037.043-.056a2.885,2.885,0,0,0,.353-.626c.131-.338.291-.778.291-.778.111-.3.222-.592.334-.887l.121-.316a.548.548,0,0,0,.051-.346c-.047-.154-.259-.259-.383-.126a.521.521,0,0,0-.1.179q-.163.433-.324.866l-.138.371c-.009.025-.069.132-.059.159l-.17-.446c-.1-.275-.209-.549-.312-.824-.025-.067-.05-.134-.077-.2a.282.282,0,0,0-.121-.141.227.227,0,0,0-.261.041.308.308,0,0,0-.077.239.7.7,0,0,0,.039.177" transform="translate(-583.358 -304.823)" fill="#f3801f"/>
      </g>
      <path id="Path_3942" data-name="Path 3942" d="M284.159,303.281a.91.91,0,0,0,0,.1c0,.1,0,.2,0,.3v1.3q0,.109,0,.217a1.66,1.66,0,0,0,0,.2.355.355,0,0,0,.081.2.241.241,0,0,0,.16.079h.026a.239.239,0,0,0,.2-.105.424.424,0,0,0,.069-.19,1.5,1.5,0,0,0,.006-.214c0-.059,0-.119,0-.178s0-.117,0-.176v-.7a.937.937,0,0,1,.014-.214.488.488,0,0,1,.137-.255.389.389,0,0,1,.246-.094h.023a.374.374,0,0,1,.249.086.46.46,0,0,1,.124.2.974.974,0,0,1,.036.327q0,.327,0,.655v.567s.024.3.268.3.266-.272.266-.272V304.1s.006-.551.46-.551c.422,0,.384.539.384.539v1.325s.035.265.267.265.265-.26.265-.26v-1.451s-.03-1-.793-1a.825.825,0,0,0-.748.442s0-.007-.005-.009l-.013-.024-.021-.036-.03-.045c-.012-.018-.025-.035-.039-.051s-.031-.037-.048-.054-.037-.037-.057-.054a.734.734,0,0,0-.067-.051.681.681,0,0,0-.078-.045.668.668,0,0,0-.259-.068l-.069,0a.473.473,0,0,0-.166.032.584.584,0,0,0-.089.044.676.676,0,0,0-.08.056.823.823,0,0,0-.083.078,1.033,1.033,0,0,0-.084.1l-.01.014s-.032-.307-.269-.307a.257.257,0,0,0-.223.133.421.421,0,0,0-.043.1.339.339,0,0,0-.01.056" transform="translate(-274.486 -292.662)" fill="#f3801f"/>
      <path id="Path_3943" data-name="Path 3943" d="M387.1,305.026a.825.825,0,1,1,.6-.794.718.718,0,0,1-.6.794m0-2.162a1.392,1.392,0,1,0,1.128,1.366,1.264,1.264,0,0,0-1.128-1.366" transform="translate(-372.841 -292.553)" fill="#f3801f"/>
      <path id="Path_3944" data-name="Path 3944" d="M457.912,303.3a.324.324,0,0,0-.04-.159.269.269,0,0,0-.241-.15.231.231,0,0,0-.19.1.386.386,0,0,0-.044.083.341.341,0,0,0-.023.131v.005c0,.1,0,.2,0,.3v1.671a.613.613,0,0,0,.011.173.282.282,0,0,0,.264.218c.229,0,.257-.256.257-.256v-1.234a.733.733,0,0,1,.027-.2.526.526,0,0,1,.494-.45.43.43,0,0,1,.295.11.575.575,0,0,1,.144.227,1.375,1.375,0,0,1,.052.5c0,.05,0,.1,0,.149v.694a.749.749,0,0,0,.016.255.29.29,0,0,0,.264.205.236.236,0,0,0,.208-.125.485.485,0,0,0,.049-.252c0-.186,0-.371,0-.557v-.53a1.805,1.805,0,0,0-.091-.606,1.176,1.176,0,0,0-.213-.384.722.722,0,0,0-.406-.24.809.809,0,0,0-.154-.014.822.822,0,0,0-.669.335s-.008,0-.008,0" transform="translate(-441.809 -292.655)" fill="#f3801f"/>
      <path id="Path_3945" data-name="Path 3945" d="M341.418,402.934a.536.536,0,0,1,0-.075v-2.634a.182.182,0,0,1,.051-.124.176.176,0,0,1,.123-.051h.009a.179.179,0,0,1,.127.048.2.2,0,0,1,.059.147q0,.076,0,.151v2.422a.532.532,0,0,1,0,.124.181.181,0,0,1-.179.141.187.187,0,0,1-.18-.134.1.1,0,0,1,0-.015" transform="translate(-329.798 -386.433)" fill="#808083"/>
      <path id="Path_3946" data-name="Path 3946" d="M365.09,402.934a.541.541,0,0,1,0-.075v-2.634a.182.182,0,0,1,.051-.124.176.176,0,0,1,.123-.051h.009a.178.178,0,0,1,.127.048.2.2,0,0,1,.059.147q0,.076,0,.151v2.422a.538.538,0,0,1,0,.124.181.181,0,0,1-.179.141.187.187,0,0,1-.18-.134.1.1,0,0,1,0-.015" transform="translate(-352.664 -386.433)" fill="#808083"/>
      <path id="Path_3947" data-name="Path 3947" d="M201.974,425.262l-.013-.055-.026-.11-.051-.219-.118-.505c-.039-.168-.073-.338-.119-.5l-.009-.03a.236.236,0,0,0-.064-.114.258.258,0,0,0-.2-.042.218.218,0,0,0-.131.058.284.284,0,0,0-.058.138l-.318,1.435-.342-1.376a.348.348,0,0,0-.138-.24.18.18,0,0,0-.225.061.39.39,0,0,0,0,.327l.464,1.621a.3.3,0,0,0,.087.163.252.252,0,0,0,.145.043.234.234,0,0,0,.172-.046.277.277,0,0,0,.066-.147l.311-1.367a0,0,0,0,1,.007,0c.1.4.2.8.291,1.208l.039.168a.282.282,0,0,0,.052.125.225.225,0,0,0,.166.062.257.257,0,0,0,.139-.03.282.282,0,0,0,.112-.186c.049-.211.113-.419.172-.629.093-.331.2-.659.284-.991.008-.031.016-.062.023-.093a.608.608,0,0,0,.018-.105.192.192,0,0,0-.045-.142.174.174,0,0,0-.143-.059c-.147.01-.181.178-.206.292-.1.449-.215.9-.326,1.342" transform="translate(-193.313 -409.258)" fill="#808083"/>
      <path id="Path_3948" data-name="Path 3948" d="M282.21,424.593a.443.443,0,0,1-.137.263.466.466,0,0,1-.119.082.647.647,0,0,1-.423.04.25.25,0,0,1-.193-.271.318.318,0,0,1,.155-.262.806.806,0,0,1,.288-.1,2.01,2.01,0,0,0,.39-.088l.041-.018q0,.091,0,.181a1.3,1.3,0,0,1,0,.169m.493.41c-.033-.015-.076-.011-.1-.038a.155.155,0,0,1-.023-.1q0-.482.007-.964a1.575,1.575,0,0,0-.027-.369.527.527,0,0,0-.188-.31.654.654,0,0,0-.272-.1,1.2,1.2,0,0,0-.593.024.721.721,0,0,0-.36.261.48.48,0,0,0-.1.3.218.218,0,0,0,.042.11.184.184,0,0,0,.26.036c.065-.061.066-.163.109-.241a.376.376,0,0,1,.319-.16.473.473,0,0,1,.344.1.26.26,0,0,1,.055.331.361.361,0,0,1-.21.118c-.161.043-.329.057-.491.1a.727.727,0,0,0-.419.256.677.677,0,0,0-.1.46.645.645,0,0,0,.121.337.6.6,0,0,0,.4.2.877.877,0,0,0,.757-.285.305.305,0,0,0,.348.292.232.232,0,0,0,.2-.143.186.186,0,0,0-.077-.22" transform="translate(-271.393 -408.693)" fill="#808083"/>
      <path id="Path_3949" data-name="Path 3949" d="M438.9,405.836c0-.013,0-.026,0-.039,0-.033,0-.065,0-.1v-.125c0-.041,0-.082,0-.123s0-.061,0-.091a.173.173,0,0,1,.025-.1.166.166,0,0,1,.091-.073.227.227,0,0,1,.071-.011.169.169,0,0,1,.122.046.271.271,0,0,1,.056.206c0,.052,0,.1,0,.156v.253h.192a.193.193,0,0,1,.072.007.179.179,0,0,1,.116.16c0,.005,0,.011,0,.016a.182.182,0,0,1-.081.158.232.232,0,0,1-.028.015.138.138,0,0,1-.061.011h-.209v1.317a.164.164,0,0,0,.176.156c.171,0,.26-.012.26.175a.166.166,0,0,1-.055.134.234.234,0,0,1-.158.049,1.44,1.44,0,0,1-.2-.008.523.523,0,0,1-.171-.063.418.418,0,0,1-.2-.228.447.447,0,0,1-.022-.143V406.21h-.1a.375.375,0,0,1-.1-.005.2.2,0,0,1-.12-.1.192.192,0,0,1-.016-.08.187.187,0,0,1,.085-.161.162.162,0,0,1,.087-.025c.054,0,.109,0,.162,0" transform="translate(-423.642 -391.383)" fill="#808083"/>
      <path id="Path_3950" data-name="Path 3950" d="M385.507,424.019s.053-.534.523-.534c.5,0,.494.534.494.534Zm1.4.059c-.052-.471-.242-.96-.918-.96-.558,0-.97.69-.835,1.408a.975.975,0,0,0,.615.821.988.988,0,0,0,.217.036.855.855,0,0,0,.6-.177c.124-.1.305-.337.242-.513a.166.166,0,0,0-.157-.115c-.091-.008-.147.09-.169.133a.419.419,0,0,1-.469.306.509.509,0,0,1-.439-.281.9.9,0,0,1-.085-.357H386.6c.03,0,.061,0,.092,0a.28.28,0,0,0,.091-.007.186.186,0,0,0,.1-.074.3.3,0,0,0,.027-.222" transform="translate(-372.021 -408.714)" fill="#808083"/>
      <path id="Path_3951" data-name="Path 3951" d="M1.146,286.176l-.778,0v.642l-.368,0v.7H.371s0,.946,0,.991a.871.871,0,0,0,.308.6,1.136,1.136,0,0,0,.749.331h.585v-.665H1.529c-.326,0-.383-.394-.383-.394l0-.858.528,0c.283,0,.337-.312.337-.312v-.388l-.866,0" transform="translate(0 -276.433)" fill="#ec1c23"/>
      <path id="Path_3952" data-name="Path 3952" d="M66.134,305.207a.912.912,0,0,0-.639.263,1.017,1.017,0,0,0-.355.707c0,.088,0,1.65,0,1.65H65.9s0-1.322,0-1.542.332-.378.423-.378h.444l0-.7" transform="translate(-62.923 -294.817)" fill="#ec1c23"/>
      <path id="Path_3953" data-name="Path 3953" d="M120.68,305.143l-.792,0s0,1.456,0,1.585a.415.415,0,0,1-.42.388.43.43,0,0,1-.395-.39c0-.069,0-.988,0-1.251a.349.349,0,0,0-.323-.337l-.452,0s0,1.486,0,1.62a.973.973,0,0,0,.27.676,1.1,1.1,0,0,0,.918.355,1.239,1.239,0,0,0,.875-.3,1.107,1.107,0,0,0,.319-.828c0-.136,0-1.525,0-1.525" transform="translate(-114.275 -294.753)" fill="#ec1c23"/>
      <path id="Path_3954" data-name="Path 3954" d="M192.758,304.145a.547.547,0,0,1,.562-.446.516.516,0,0,1,.489.448Zm1.745-.169a1.307,1.307,0,0,0-.36-.609,1.263,1.263,0,0,0-.849-.332,1.307,1.307,0,0,0-.838.318,1.481,1.481,0,0,0-.454,1.1,1.433,1.433,0,0,0,.441,1.013,1.368,1.368,0,0,0,1.583.09,1.4,1.4,0,0,0,.42-.468s-.6-.15-.72-.185a.55.55,0,0,1-.464.217.575.575,0,0,1-.45-.282.45.45,0,0,1-.044-.159l1.781,0a2.407,2.407,0,0,0-.046-.7" transform="translate(-185.468 -292.719)" fill="#ec1c23"/>
      <path id="Path_3955" data-name="Path 3955" d="M322.193,22.234h-3.36a.516.516,0,0,0-.487.346l-.527,1.512h0l-.017.05-.012.034c-.581,1.667-1.21,3.472-1.449,4.156-.028.085-.06.182-.1.282a.835.835,0,0,1-.1.185c-.01.014-.021.027-.031.039a.466.466,0,0,1-.073.071l-.006,0a.406.406,0,0,1-.039.027.412.412,0,0,1-.078.037l-.005,0H315.9a.446.446,0,0,1-.115.022h4.039a.31.31,0,0,0,.077-.009.568.568,0,0,0,.4-.441l2.1-6.027a.22.22,0,0,0-.208-.292" transform="translate(-305.042 -21.474)" fill="#ff7a00"/>
      <path id="Path_3956" data-name="Path 3956" d="M136.471,6.386l0-.007.008-.022.012-.035.017-.049.021-.061.025-.072.029-.083.033-.093.036-.1.039-.111.042-.119.044-.126.046-.133.049-.138.05-.143.052-.147.053-.151.054-.154.055-.156.055-.157.055-.158.055-.157.055-.157.054-.155.054-.153.052-.15.051-.146.05-.141.048-.136.046-.13.043-.123.041-.116.038-.108.035-.1.031-.089.028-.079.024-.068.02-.056a.82.82,0,0,1,.034-.091h0c0-.005,0-.01.007-.016a.319.319,0,0,1,.131-.137L137.693.332A.464.464,0,0,0,137.255,0h-3.21a.226.226,0,0,0-.217.29l1.807,6.073a.459.459,0,0,0,.4.336h0a.45.45,0,0,0,.433-.316" transform="translate(-129.265)" fill="#ff000f"/>
      <path id="Path_3957" data-name="Path 3957" d="M260.978,54.59h0" transform="translate(-252.095 -52.728)" fill="#aa0016"/>
      <path id="Path_3958" data-name="Path 3958" d="M202.111,59.409l-.022-.076-.012-.039-.774-2.6-.542-1.819a.256.256,0,0,1,.015-.191.218.218,0,0,1,.024-.038l0,0a.224.224,0,0,1,.046-.042l.006,0h0a.319.319,0,0,0-.131.137l-.009.016v0a.821.821,0,0,0-.034.091l-.02.056-.024.068-.028.079-.031.089-.035.1-.038.108-.041.116-.043.123-.046.13-.048.136-.05.141-.051.146-.052.15-.054.153-.054.155-.055.157-.055.157-.055.158-.055.157-.055.156-.054.154-.053.151-.052.147-.05.143-.049.138-.046.133-.044.126-.042.119-.039.111-.036.1-.033.093-.029.083-.025.072-.021.061-.017.049-.012.035-.008.022,0,.007a.45.45,0,0,1-.433.316h3.371l-.008-.026" transform="translate(-191.975 -52.732)" fill="#aa0016"/>
      <path id="Path_3959" data-name="Path 3959" d="M261.844,54.252q-.043-.157-.085-.314a.919.919,0,0,0-.1-.246.507.507,0,0,0-.184-.183.447.447,0,0,0-.067-.03.5.5,0,0,0-.137-.022h-3.182a.261.261,0,0,0-.142.039h0l-.006,0a.228.228,0,0,0-.046.042l0,0a.216.216,0,0,0-.024.038.256.256,0,0,0-.015.191L258.4,55.6l.774,2.6.039.13.147.513a.5.5,0,0,0,.3.306.452.452,0,0,0,.245,0l.026-.007h.006l.005,0a.408.408,0,0,0,.078-.037.412.412,0,0,0,.039-.027.522.522,0,0,0,.053-.048l.025-.027c.01-.012.021-.025.031-.039a.837.837,0,0,0,.1-.185c.039-.1.07-.2.1-.282.015-.047.029-.09.043-.128l.1-.287.126-.36.145-.415.157-.451.163-.467.162-.465.155-.443.14-.4.12-.343.092-.264.046-.131.012-.034.017-.05h0" transform="translate(-249.067 -51.634)" fill="#ffcd00"/>
    </g>
  </g>
</svg>
'''));

  Widget closeMenuFood() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28">
  <g id="Group_11737" data-name="Group 11737" transform="translate(-21 -55)">
    <rect id="Rectangle_1191" data-name="Rectangle 1191" width="28" height="28" rx="11" transform="translate(21 55)" fill="#3d525c" style="mix-blend-mode: multiply;isolation: isolate"/>
    <g id="Group_11736" data-name="Group 11736" transform="translate(12608.5 16910.5)">
      <line id="Line_49" data-name="Line 49" x2="11.07" y2="11.07" transform="translate(-12579.5 -16847.5)" fill="none" stroke="#fff" stroke-linecap="round" stroke-width="2"/>
      <line id="Line_50" data-name="Line 50" x1="11.07" y2="11.07" transform="translate(-12579.5 -16847.5)" fill="none" stroke="#fff" stroke-linecap="round" stroke-width="2"/>
    </g>
  </g>
</svg>

'''));

  Widget menuActiveSvgIcon() => Container(
      child: SvgPicture.string(
          '''<svg xmlns="http://www.w3.org/2000/svg" width="21.5" height="21.87" viewBox="0 0 21.5 21.87"><g id="Layer_2" data-name="Layer 2"><g id="Layer_1-2" data-name="Layer 1"><path d="M9.62.14a2.73,2.73,0,0,0-1.74,0,3,3,0,0,0-.79.43c-.23.18-.5.41-.82.69h0a4.21,4.21,0,0,1-.86.66A1.3,1.3,0,0,1,4.77,2a4.16,4.16,0,0,1-1-.38L1.05.43A.75.75,0,0,0,.34.49.74.74,0,0,0,0,1.12V14.75c0,1.09,0,2,.06,2.65a4.9,4.9,0,0,0,.46,1.87,4.73,4.73,0,0,0,2.07,2.08,5,5,0,0,0,1.87.46c.7.06,1.56.06,2.66.06H18.75a2.75,2.75,0,0,0,2.75-2.75V14.29c0-.54,0-1,0-1.35a2.77,2.77,0,0,0-.27-1.07,2.64,2.64,0,0,0-2.28-1.47c-.36,0-.81,0-1.34,0H17.5V1.12a.74.74,0,0,0-.34-.63.75.75,0,0,0-.71-.06L13.73,1.64a4.32,4.32,0,0,1-1,.38,1.3,1.3,0,0,1-.62-.09,4.21,4.21,0,0,1-.86-.66h0c-.32-.28-.59-.51-.82-.69A3,3,0,0,0,9.62.14ZM20,19.12a1.25,1.25,0,1,1-2.5,0V11.87h.05c.57,0,1,0,1.25,0a1.45,1.45,0,0,1,.52.11,1.25,1.25,0,0,1,.54.55,1.37,1.37,0,0,1,.12.51c0,.3,0,.68,0,1.26ZM5.75,7.37a.75.75,0,0,0,0,1.5h4a.75.75,0,1,0,0-1.5ZM8,12.12a.75.75,0,0,1,.75-.75h3a.75.75,0,0,1,0,1.5h-3A.76.76,0,0,1,8,12.12Zm.75,3.25a.75.75,0,1,0,0,1.5h3a.75.75,0,1,0,0-1.5Zm-2-3.25a1,1,0,1,1-1-1A1,1,0,0,1,6.75,12.12Zm-1,5a1,1,0,1,0-1-1A1,1,0,0,0,5.75,17.12Z" fill="#febc18" fill-rule="evenodd"/></g></g></svg>
'''));

  Widget couponMainPageSvgIcon() => Container(
        margin: const EdgeInsets.all(7.5),
        child: SvgPicture.string(
            '''<svg xmlns="http://www.w3.org/2000/svg" width="16.414" height="14.887" viewBox="0 0 16.414 14.887">
    <path id="Path_25343" data-name="Path 25343" d="M613.365,2258.465V2255.6h-2.481a2.863,2.863,0,0,0-2.863,2.863v2.094a.769.769,0,0,0,.769.769,1.521,1.521,0,0,1,1.522,1.522v.392a1.521,1.521,0,0,1-1.522,1.522.769.769,0,0,0-.769.769v2.094a2.863,2.863,0,0,0,2.863,2.863h2.481v-2.863a.573.573,0,0,1,1.145,0v2.863h7.062a2.863,2.863,0,0,0,2.863-2.863v-2.094a.769.769,0,0,0-.769-.769,1.521,1.521,0,0,1-1.522-1.522v-.392a1.521,1.521,0,0,1,1.522-1.522.769.769,0,0,0,.769-.769v-2.094a2.863,2.863,0,0,0-2.863-2.863H614.51v2.863a.573.573,0,0,1-1.145,0Zm1.145,3.054a.573.573,0,0,0-1.145,0v3.054a.573.573,0,0,0,1.145,0Z" transform="translate(-608.021 -2255.602)" fill="#fff" fill-rule="evenodd"/>
</svg>
'''),
      );

  Container flexibleSpaceInAppBar() => Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment(0.0, -1.0),
            end: Alignment(0.0, 1.0),
            colors: [
              Colors.white,
              Colors.white,
            ],
            stops: [0.0, 1.0],
          ),
        ),
      );

  Container flexibleSpaceInAppBar2() => Container(
        decoration: BoxDecoration(
          color: Colors.white,
          gradient: LinearGradient(
            begin: Alignment(0.0, -1.0),
            end: Alignment(0.0, 1.0),
            colors: [
              Colors.white,
              Colors.white,
            ],
            stops: [0.0, 1.0],
          ),
        ),
      );

 TextStyle textStyleData(
      {double? font = 20, FontWeight? fontWeight, Color? fontColor}) {
    return TextStyle(
      fontFamily: 'THSarabun',
      fontSize: font,
      color: fontColor ?? Colors.black87,
      fontWeight: fontWeight ?? FontWeight.normal,
    );
  }
  Widget leadingBackIconAppBar(context, {onPressed}) => IconButton(
      icon: Icon(Icons.arrow_back_ios, color: Colors.black),
      onPressed: onPressed ?? () => Navigator.of(context).pop());

  Widget leadingBackIconAppBarNew(context, {onPressed}) => Padding(
        padding:
            const EdgeInsets.only(left: 18.5, top: 10, bottom: 10, right: 7),
        child: Container(
          // margin: const EdgeInsets.fromLTRB(7, 6.5, 7, 6.5),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(15),
            color: Color(0xFF3D525C),
          ),
          child: Center(
            child: IconButton(
                icon: Icon(
                  Icons.arrow_back_ios,
                  color: Colors.white,
                  size: 18,
                ),
                onPressed: onPressed ?? () => Navigator.of(context).pop()),
          ),
        ),
      );

  Text fontStyleBold(String title,
      {Color? colorValue, double? fontSize, TextOverflow? overflow}) {
    colorValue ??= Colors.black;
    fontSize ??= 24.0;

    return Text(
      title,
      overflow: overflow ?? TextOverflow.fade,
      style: TextStyle(
          fontFamily: 'THSarabun',
          fontSize: fontSize,
          color: colorValue,
          fontWeight: FontWeight.bold),
    );
  }

  Text fontStyleRegular(String title,
      {Color? colorValue, double? fontSize, TextOverflow? overflow}) {
    colorValue ??= Colors.black;
    fontSize ??= 17.0;
    return Text(
      title,
      overflow: overflow ?? TextOverflow.fade,
      softWrap: false,
      style: TextStyle(
          fontFamily: 'THSarabun',
          fontSize: fontSize,
          color: colorValue,
          fontWeight: FontWeight.normal),
    );
  }

  Text fontStyleRegularUnderLine(String title,
      {Color? colorValue, double? fontSize}) {
    colorValue ??= Colors.black;
    fontSize ??= 17.0;
    return Text(
      title,
      overflow: TextOverflow.fade,
      maxLines: 1,
      softWrap: false,
      style: TextStyle(
          decoration: TextDecoration.underline,
          fontFamily: 'THSarabun',
          fontSize: fontSize,
          color: colorValue,
          fontWeight: FontWeight.bold),
    );
  }

  Future<Null> dialogProgress(BuildContext context, {bool pop = false}) async {
    pop
        ? Navigator.pop(context)
        : showDialog(
            barrierDismissible: false,
            context: context,
            builder: (context) => SpinKitPouringHourGlass(
              color: Colors.amber,
              size: 100,
            ),
          );
  }

  Widget textAutoNewLine(String title,
      {Color? colorValue, double? fontSize, bool? alignCenter}) {
    return Row(
      mainAxisAlignment: alignCenter == true
          ? MainAxisAlignment.center
          : MainAxisAlignment.start,
      children: [
        Flexible(
          child: Column(
            mainAxisAlignment: alignCenter == true
                ? MainAxisAlignment.center
                : MainAxisAlignment.start,
            children: [
              Text(
                title,
                style: TextStyle(
                    height: 1,
                    fontFamily: 'THSarabun',
                    fontSize: fontSize ?? 17.0,
                    color: colorValue ?? Colors.black,
                    fontWeight: FontWeight.normal),
              ),
            ],
          ),
        ),
      ],
    );
  }

  TextStyle textStyleRegular({double? fontSize, Color? colorValue}) =>
      TextStyle(
          fontFamily: 'THSarabun',
          overflow: TextOverflow.ellipsis,
          fontSize: fontSize ?? 18,
          color: colorValue ?? Colors.black,
          fontWeight: FontWeight.normal);

  TextStyle textStyleBold({double? fontSize, Color? colorValue}) => TextStyle(
      fontFamily: 'THSarabun',
      overflow: TextOverflow.ellipsis,
      fontSize: fontSize ?? 18,
      color: colorValue ?? Colors.black,
      fontWeight: FontWeight.bold);

  String priceFormat(var price) {
    String? result;

    double priceParse =
        double.parse(price.toString().isEmpty ? '0' : price.toString());
    var formatter = NumberFormat('#,###,###.00');
    List<String> _price = formatter.format(priceParse).split('.');

    if (_price[1].substring(0, 1) == '0' && _price[1].substring(1) == '0') {
      result = _price.first;
    } else {
      if (_price[1].substring(1) == '0') {
        result = priceParse.toStringAsFixed(1);
      } else
        result = priceParse.toStringAsFixed(2);
    }

    return result.isEmpty ? '0' : result;
  }

  Widget textNotSuccess(BuildContext context, String text) => Center(
        child: Container(
          alignment: Alignment.center,
          height: MediaQuery.of(context).size.height,
          child: textAutoNewLine(text,
              fontSize: 50, colorValue: Colors.grey, alignCenter: true),
        ),
      );

  String priceDecimal(data) => num.parse(data.toString()).toStringAsFixed(2);

  String dateTimeTHFormat(
      {String? dateTime, String? formatDate, bool? dateOnly}) {
    bool _dateOnly = dateOnly ?? false;
    DateFormat dateFormat = DateFormat(formatDate ?? "yyyy-MM-ddTHH:mm:ss");
    DateTime _dateTime = dateFormat.parse(dateTime!);

    String day = DateFormat('d').format(_dateTime);
    String month = DateFormat('M').format(_dateTime);
    String year =
        (int.parse(DateFormat('yyyy').format(_dateTime)) + 543).toString();

    String time = '';
    if (_dateOnly == false) time = DateFormat('Hm').format(_dateTime);

    switch (month) {
      case '1':
        month = 'ม.ค.';
        break;

      case '2':
        month = 'ก.พ.';
        break;
      case '3':
        month = 'มี.ค.';
        break;
      case '4':
        month = 'เม.ย.';
        break;
      case '5':
        month = 'พ.ค.';
        break;
      case '6':
        month = 'มิ.ย.';
        break;
      case '7':
        month = 'ก.ค.';
        break;
      case '8':
        month = 'ส.ค.';
        break;
      case '9':
        month = 'ก.ย.';
        break;
      case '10':
        month = 'ต.ค.';
        break;
      case '11':
        month = 'พ.ย.';
        break;
      case '12':
        month = 'ธ.ค.';
        break;
      default:
    }

    return '$day $month $year${_dateOnly == false ? " - $time" : ''}';
  }

  void bottomSheet(context, Widget widget, double height, Color bgcolor) {
    // call demo bottomSheetCancelBook
    showModalBottomSheet(
        isScrollControlled: true,
        backgroundColor: bgcolor,
        context: context,
        builder: (BuildContext bc) {
          return DraggableScrollableSheet(
              initialChildSize: height,
              maxChildSize: height,
              minChildSize: height,
              builder:
                  (BuildContext context, ScrollController scrollController) {
                return CustomScrollView(
                  //  controller: scrollController,
                  slivers: [
                    SliverFillRemaining(hasScrollBody: false, child: widget),
                  ],
                );
              });
        });
  }

  Widget progressAPI() {
    return Center(
      child: Container(
        width: 100,
        height: 100,
        child: CupertinoActivityIndicator.partiallyRevealed(
          radius: 20,
        ),
      ),
    );
  }

  Widget typeTabBar(BuildContext context, String value, {double? fontSize}) {
    var constants = Constants();
    return Container(
      width: double.infinity,
      height: 50,
      color: Color(0xFFF3F3F3),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Padding(
            padding: paddingAppLR,
            child: constants.fontStyleBold(value,
                fontSize: fontSize ?? 24.00, colorValue: Color(0xFF3D525C)),
          ),
        ],
      ),
    );
  }

  Constants();
}
